{"version":3,"sources":["dummy/app.js","dummy/components/x-timer.js","dummy/initializers/export-application-global.js","dummy/router.js","dummy/templates/application.js","dummy/templates/components/x-timer.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/test-helper.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/components/x-timer', ['exports', 'ember', 'ember-cli-timer/components/x-timer'], function (exports, Ember, Timer) {\n\n\t'use strict';\n\n\texports['default'] = Timer['default'];\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function() {\n  });\n\n  exports['default'] = Router;\n\n});","define('dummy/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n  /**/) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<div class=\\\"container\\\">\\n<h2 id='title'>Welcome</h2>\\n<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">Timer with auto start</div>\\n  <div class=\\\"panel-body\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['x-timer'] || (depth0 && depth0['x-timer']),options={hash:{\n      'autoStart': (\"true\"),\n      'format': (\"HH:MM:SS\"),\n      'stopRequired': (\"false\")\n    },hashTypes:{'autoStart': \"STRING\",'format': \"STRING\",'stopRequired': \"STRING\"},hashContexts:{'autoStart': depth0,'format': depth0,'stopRequired': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"x-timer\", options))));\n    data.buffer.push(\"\\n  </div>\\n</div>\\n<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">Timer with auto start  and stop</div>\\n  <div class=\\\"panel-body\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['x-timer'] || (depth0 && depth0['x-timer']),options={hash:{\n      'autoStart': (\"true\"),\n      'format': (\"HH:MM:SS\"),\n      'stopRequired': (\"true\")\n    },hashTypes:{'autoStart': \"STRING\",'format': \"STRING\",'stopRequired': \"STRING\"},hashContexts:{'autoStart': depth0,'format': depth0,'stopRequired': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"x-timer\", options))));\n    data.buffer.push(\"\\n  </div>\\n</div>\\n<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">A typical timer</div>\\n  <div class=\\\"panel-body\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['x-timer'] || (depth0 && depth0['x-timer']),options={hash:{\n      'format': (\"HH:MM:SS\"),\n      'stopRequired': (\"true\")\n    },hashTypes:{'format': \"STRING\",'stopRequired': \"STRING\"},hashContexts:{'format': depth0,'stopRequired': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"x-timer\", options))));\n    data.buffer.push(\"\\n  </div>\\n</div>\\n<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">Timer with start time and auto start set</div>\\n  <div class=\\\"panel-body\\\">\\n    <div>Start time set at 300 seconds</div>\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['x-timer'] || (depth0 && depth0['x-timer']),options={hash:{\n      'autoStart': (\"false\"),\n      'startTime': (\"300\"),\n      'format': (\"HH:MM:SS\"),\n      'stopRequired': (\"true\")\n    },hashTypes:{'autoStart': \"STRING\",'startTime': \"STRING\",'format': \"STRING\",'stopRequired': \"STRING\"},hashContexts:{'autoStart': depth0,'startTime': depth0,'format': depth0,'stopRequired': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"x-timer\", options))));\n    data.buffer.push(\"\\n  </div>\\n</div>\\n<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">Stop watch</div>\\n  <div class=\\\"panel-body\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['x-timer'] || (depth0 && depth0['x-timer']),options={hash:{\n      'autoStart': (\"false\"),\n      'startTime': (\"300\"),\n      'format': (\"HH:MM:SS\"),\n      'isStopWatch': (\"true\")\n    },hashTypes:{'autoStart': \"STRING\",'startTime': \"STRING\",'format': \"STRING\",'isStopWatch': \"STRING\"},hashContexts:{'autoStart': depth0,'startTime': depth0,'format': depth0,'isStopWatch': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"x-timer\", options))));\n    data.buffer.push(\"\\n  </div>\\n</div>\\n</div>\\n\");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/templates/components/x-timer', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n  /**/) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n<button type=\\\"submit\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":btn :btn-sm isRunning:btn-default:btn-primary\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\" class=\\\"btn btn-sm btn-primary\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"start\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Start</button>\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n<button type=\\\"button\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":btn :btn-sm isRunning:btn-primary:btn-default\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"stop\", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"BOOLEAN\"],data:data})));\n    data.buffer.push(\">Stop</button>\\n\");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n<button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"pause\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers['if'].call(depth0, \"isRunning\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</button>\\n\");\n    return buffer;\n    }\n  function program6(depth0,data) {\n    \n    \n    data.buffer.push(\"Pause\");\n    }\n\n  function program8(depth0,data) {\n    \n    \n    data.buffer.push(\"Cont.\");\n    }\n\n    data.buffer.push(\"<h4>\");\n    stack1 = helpers._triageMustache.call(depth0, \"duration\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</h4>\\n\");\n    stack1 = helpers['if'].call(depth0, \"showStartBtn\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    stack1 = helpers['if'].call(depth0, \"stopRequired\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    stack1 = helpers['if'].call(depth0, \"isStopWatch\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n  function startApp(attrs) {\n    var App;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function() {\n      App = Application['default'].create(attributes);\n      App.setupForTesting();\n      App.injectTestHelpers();\n    });\n\n    return App;\n  }\n  exports['default'] = startApp;\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.setResolver(resolver['default']);\n\n  document.write('<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>');\n\n  QUnit.config.urlConfig.push({ id: 'nocontainer', label: 'Hide container'});\n  var containerVisibility = QUnit.urlParams.nocontainer ? 'hidden' : 'visible';\n  document.getElementById('ember-testing-container').style.visibility = containerVisibility;\n\n});","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}